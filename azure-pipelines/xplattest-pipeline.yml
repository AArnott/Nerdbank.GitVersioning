steps:
- checkout: none # skip checking out the default repository resource

- script: dotnet --info
  displayName: Show dotnet SDK info

- task: DownloadBuildArtifacts@0
  displayName: Download Build Artifacts
  inputs:
    artifactName: deployables
    downloadPath: $(System.DefaultWorkingDirectory)

- script: |
    git config --global user.name ci
    git config --global user.email me@ci.com
  displayName: Set up git username and email address

- script: >
    PkgFileName=$(ls deployables/Nerdbank.GitVersioning.*nupkg)

    NBGV_NuGetPackageVersion=$([[ $PkgFileName =~ Nerdbank.GitVersioning\.(.*)\.nupkg ]] && echo "${BASH_REMATCH[1]}")

    echo "<configuration><packageSources><add key='local' value='deployables' /></packageSources></configuration>" > nuget.config &&
    echo '{"version":"42.42"}' > version.json &&
    git init && 
    git add version.json &&
    git commit -m "Initial commit" &&
    mkdir lib && cd lib &&
    for l in c# f# vb;
    do
      echo Testing language $l &&
      dotnet new classlib -lang=$l &&
      dotnet add package nerdbank.gitversioning -v $NBGV_NuGetPackageVersion &&
      dotnet pack -c debug &&
      ls bin/debug/lib.42.42.1*.nupkg 1> /dev/null 2>&1 &&
      rm -r *
      if [ $? -ne 0 ]; then exit 1; fi
    done
  displayName: Consume NB.GV from .NET Core build
  failOnStderr: true

- script: >
    echo DOTNET_ROOT=$DOTNET_ROOT

    PkgFileName=$(ls deployables/Nerdbank.GitVersioning.*nupkg)

    NBGV_NuGetPackageVersion=$([[ $PkgFileName =~ Nerdbank.GitVersioning\.(.*)\.nupkg ]] && echo "${BASH_REMATCH[1]}")

    dotnet tool install nbgv --tool-path . --version $NBGV_NuGetPackageVersion --add-source deployables &&
    ./nbgv get-version -f json -p lib &&
    ./nbgv get-version -f json -p lib | grep 42.42.1
  displayName: Use nbgv dotnet CLI tool
  failOnStderr: true
